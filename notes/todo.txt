nov 10 2023

figure out google maps api
get data from burrito slut db
create component that shows the map for the given restaurant
plan larger file structure with various components

how will each page be set up?

home page?

search
    sort by
        proximity
        reviews
            highest rated burrito within x miles
            highest rated restaurant within x miles
        burrito tags

search results
    array of burritos / restaurants
        burritos include
            burrito data
            burrito reviews
            link to restaurant/s if they have multiple locations
        restaurants include
            restaurant data
            restaurant reviews
            filter burritos within restaurant
            rest of the menu
            map


items to implement:

custom markers?

user
    userAuth
        signin / register with socials
    create account
        bio
        pfp

reviews
    add new burritos / restaurants
    rate them
    text review
    photos
    


november 13
ui todos:

search: 
    the search will yield search results in a numbered order based on search parameters
        the parameters include
            distance
            highest rating
            highest rating within x miles
            burrito tags
            name search


burrito / restuarant search
sponsored results
featured results
all results

<searchresult>
    photos. can click through
    <info>
        Title
        <rating>
            stars
            avg rating
            (#of reviews: links to reviews)
        </rating>
        tags + price
        Open Until
        top review with link
        outdoor seating / delivery / takeout
    </info
</searchresult>



todos

fix map. configure query

create review form so the users can add burritos and restaurants

configure auth so users can sign in



ui ideas

take a page out of y**p's book

search results on the left
map on the right
markers correlating to the search results


maps are only ever used for search results
and directions once we are on a restaurant page
the map.svelte component is for search results
the directions.svelte component is for specific restaurant directions

need components for many different things
search results

restuarant page
    has multiple inside it as well the menu can be a component
    info card: website, phone directions, suggest an edit


routes ideas

burritoBudyy.com/search

use search params in the routing

https://www.burritoSlut.com/search?find_desc=Breakfast+Burrito&find_loc=Newport+Beach,%20CA

this will be the url when a user searches for "breakfast burrito", with the location set to "newport beach, ca"


map component ideas:

use search to fetch data.
use fetched data to order and place markers
hovering marker shows data for that burrito place


main focus of this app is the search
the top nav bar should be a search bar that let's the user search from everypage


left side = search filters


make the map invisible on the mobile screen size
use a map icon in the top right to let the user click on it and see the search results

get rid of full screen map option
i can't think of a reason why someone would want that anyways


nov 15

add autocomplete for places / burritos
contain to location


now let's write reviews

that way i can manually enter in new restaurants and burritos
then once the db is a little bit more populated i can test out how the search works

oh wait i guess i should have auth enabled before

figure out the auth


form notes

birthday
only allow date options for specific months
for example feb has 28 days


autocomplete:

add suggestions to the left search bar

    these are types of burritos names etc. not addresses

add current location to the top of the address autocomplete on the left
find out how to style autocomplete

figure out how to run auto complete config twice so that there are 2 different types of suto complete


let's get going with the search results component

components:
    filters
        left hand side
        or condensed version on top for mobile
    search
        middle of the page between map and filters
        components:
            result
                info?
    map
        components:
            result
                photo / title / reviews on marker hover

i need one unified search query that sends the relevant data to each component
all of the data is in the db
    i just have to figure out which functions pull it out
        and i have to figure out how to set search params





nov 20 2023

setting up the fetch data functions so that i can search for the burritos from the db

should i pass the data into the search page so that it is available for the maps as well?

yes because the alternative would be to pass data into each one separately so i have to pass the data anyways shrug

instead of having a single prop for the search results and having to switch everything for whether its a burrito search or a restaurant search
i'll just make burritoresults.svelte and restaurantresults.svelte
boom way easier


for the home page im thinking we should make the slider into a component

that way i can easily code in the fact that a certain slide is active and they can be more customizable

then i can easily add new data into these in the future



novemeber 22

find out why this is fine
// fetch restaurant by ID
    const restaurantRef = doc(db, "restaurants", restaurantId);
    const restaurantDoc = await getDoc(restaurantRef);

but this isn't
// fetch each burrito by ID
    const burritoIds = restaurantData.menu;
    const burritoDocs = await Promise.all(
        burritoIds.map(burritoId => {
            const burritoRef = doc(db, "burritos", burritoId);
            const burritoDoc = getDoc(burritoRef)
        })
    );





add new restaurant should use autocomplete so that the user doesn't have to do much work



todo

fetch search results as an array of restaurant ids
use those to populate search results page



november 27

the way that i am handling hte data is all out of whack!

what do i need for each componenet and how can i get it there?

components
    Search
        needs the search results in an array: RestaurantData[] | BurritoData[]
    RestaurantResult
        needs RestaurantData

data that i am returning should easily feed this into the components

    right now the data being passed from the fetchSearchResults is the SearchResults type

        interface SearchResults: {
            results: BurritoData[] | RestaurantData[],
            lastVisible: any
        }

            i don't need to worry about lastVisible at the moment. 
            i will be passing that back into the fetchSearchResults later
        
    



todo:

create user auth
change the write setting so that only signed in users can make changes
fix maps autocomplete

click on pedros result => go to /restaurant/pedros
click on pedros reviews => go to /restuarant/pedros/reviews
tap/hover hours => see modal for full hours
start order button => restuarants native ordering site
click on tags => start search based on those specific tags


things to consider going forward

where will i get my data from?

    google places
        is a good start
        has reviews
        will need to convert into a RestaurantData object in my db
    
    customer entry
        maybe not sure
        won't look professional if our burrito review site doesn't have a burrito spot
    


todo

restuarant entry
    when restaurant is saved to the database there should be more default values added so that it will work
        let's thinks about what those would be:
            ill add a new resty then see what happens
                Need:
                    restaurant added successfully 
                    after adding take user to restaurant page

data proliferation
    the review data needs to be pulled right away with the searched restaurants 
        that way the correct photos can be displayed in the slideshow
            if the restaurant has a pfp then that will be used
                if not then we will use the first review photo
                    if not that then we will use the default

map
    add markers to map based on search results
        need
            to calculate the geopoint based on the address given?
            use data from google places to cross reference?


let's add tags and let users add tags to restaurants


todo let the search reflect in the url

example if i click on the 'most handsome' tag. 
    any restaurants with that tag will show up
        and the url should be something like /search#most-handsome

search within certain radius
sort by closest
best reviews
lowest prices

this makes a database call for every restaurant that shows up inside this radius. 
then sorts it by a certain criteria


steps: bind the search input as a url param

so when i search for something it is inserted into the url
but also if i send a url to someone withthe search in it it will use that as a search argument


passing in mexican and breakfast as strings in the tags array but i am getting undefined when i console log the results


tags are case sensitive so i need to work some magic to get those to be a little more loose for all of the people who do typos and whatnot


when the restaurants are queried we should also make sure that the review data is loaded so that a good review can popluate the result
also we want to allow the users to search the reviews


should have a function to calculate the coordinates from the given addy of a resty

im thinking there's a google maps documentation for how they tell us to do this



restaurant address shouldn't be adde unless it passes the autocomplete that way we can guarentee a location
o






december 5 2023
o

now that i untangled the beast that is simply accessing google maps

i can start to:

1. add autocomplete to the new restaurant page
    a. require address to be valid before submitting new resty

2. geocode restaurant location before saving to db
    a. this allows us to start the geoquery process using geohashes

3. optimize my geoquery
    (users search location to each restaurant within userdefined search radius)

4. add a text query for searches

5. get restaurants from restaurant databases.


notes about the api call

we don't need to be setting up a custom api endpoint because it doesn't not matter if the client has our api key
so that is good because now i know that it's a lot easier to load this dang script.

i just have to be patient in taking everything apart and pay attention to how i put it together




okay so i somewhat got the script loading when i need it to!



no not somewhat. it is loading exactly when i needed it too now i should just fix the autocomplete shit